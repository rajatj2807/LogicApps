{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sql_1_Connection_Name": {
      "type": "string",
      "defaultValue": "sql-1"
    },
    "sql_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "Inta-dataloader-01 inta-sqla-01.database.windows.net"
    },
    "sql_1_server": {
      "type": "string",
      "metadata": {
        "description": "SQL server name"
      }
    },
    "sql_1_database": {
      "type": "string",
      "metadata": {
        "description": "SQL database name"
      }
    },
    "sql_1_username": {
      "type": "securestring",
      "metadata": {
        "description": "Username credential"
      }
    },
    "sql_1_password": {
      "type": "securestring",
      "metadata": {
        "description": "Password credential"
      }
    },
    "sql_1_sqlConnectionString": {
      "type": "securestring",
      "metadata": {
        "description": "SQL Connection String"
      }
    },
    "salesforce_1_Connection_Name": {
      "type": "string",
      "defaultValue": "salesforce"
    },
    "salesforce_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "Salesforce"
    },
    "salesforce_1_token:LoginUri": {
      "type": "string",
      "metadata": {
        "description": "The Salesforce Login URI. For Production, leave blank or use https://login.salesforce.com"
      },
      "defaultValue": "https://test.salesforce.com"
    },
    "salesforce_1_salesforceApiVersion": {
      "type": "string",
      "metadata": {
        "description": "The Salesforce API Version. For default, leave blank or use v41.0"
      },
      "defaultValue": "v41"
    },
    "LogicAppLocation": {
      "type": "string",
      "minLength": 1,
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "uaecentral",
        "southafricanorth",
        "southafricawest"
      ],
      "defaultValue": "eastus"
    },
    "LogicAppName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Saleforce_Connection_Logic_App"
    }
  },
  "variables": {},
  "resources": [
    {
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "For_each": {
              "type": "Foreach",
              "foreach": "@body('Get_records')?['value']",
              "actions": {
                "Insert_row_(V2)": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['sql_1']['connectionId']"
                      }
                    },
                    "method": "post",
                    "body": {
                      "CreatedById": "@items('For_each')?['CreatedById']",
                      "CreatedDate": "@items('For_each')?['CreatedDate']",
                      "Id": "@items('For_each')?['Id']",
                      "IsDeleted": "@{items('For_each')?['IsDeleted']}",
                      "LastModifiedById": "@items('For_each')?['LastModifiedById']",
                      "LastModifiedDate": "@items('For_each')?['LastModifiedDate']",
                      "LastReferencedDate": "@items('For_each')?['LastReferencedDate']",
                      "LastViewedDate": "@items('For_each')?['LastViewedDate']",
                      "Name": "@{items('For_each')?['Name']}",
                      "OwnerId": "@items('For_each')?['OwnerId']",
                      "SystemModstamp": "@items('For_each')?['SystemModstamp']",
                      "Contributor_Name__c": "@items('For_each')?['Contributor_Name__c']",
                      "Contributor__c": "@items('For_each')?['Contributor__c']",
                      "Inactive__c": "@{items('For_each')?['Inactive__c']}",
                      "Office__c": "@items('For_each')?['Office__c']",
                      "Organization__c": "@items('For_each')?['Organization__c']",
                      "Original_Office__c": "@items('For_each')?['Original_Office__c']",
                      "RH_Lev_1_GM_All__c": "@{items('For_each')?['RH_Lev_1_GM_All__c']}",
                      "RH_Lev_2_DAS__c": "@{items('For_each')?['RH_Lev_2_DAS__c']}",
                      "RH_Lev_3_Region_2__c": "@{items('For_each')?['RH_Lev_3_Region_2__c']}",
                      "RH_Lev_4_Region_1__c": "@{items('For_each')?['RH_Lev_4_Region_1__c']}",
                      "RH_Lev_5_Country__c": "@{items('For_each')?['RH_Lev_5_Country__c']}",
                      "RH_Lev_6_Office__c": "@{items('For_each')?['RH_Lev_6_Office__c']}",
                      "RH_Lev_7_Individual__c": "@{items('For_each')?['RH_Lev_7_Individual__c']}",
                      "Run_As_User__c": "@{items('For_each')?['Run_As_User__c']}",
                      "WIN_Contributor_ID__c": "@items('For_each')?['WIN_Contributor_ID__c']",
                      "WIN_Contributor_One__c": "@{items('For_each')?['WIN_Contributor_One__c']}",
                      "WIN__c": "@items('For_each')?['WIN__c']"
                    },
                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[WIN_CONTRIBUTOR_SALESFORCE]'))}/items"
                  },
                  "runAfter": {}
                },
                "Set_variable": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "LastFetchDate",
                    "value": "@items('For_each')?['LastModifiedDate']"
                  },
                  "runAfter": {
                    "Insert_row_(V2)": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {
                "Get_records": [
                  "Succeeded"
                ]
              },
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 1
                }
              }
            },
            "For_each_2": {
              "type": "Foreach",
              "foreach": "@body('Get_records_types')?['value']",
              "actions": {
                "Insert_row_(V2)_2": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['sql_1']['connectionId']"
                      }
                    },
                    "method": "post",
                    "body": {
                      "BusinessProcessId": "@items('For_each_2')?['BusinessProcessId']",
                      "CreatedById": "@items('For_each_2')?['CreatedById']",
                      "CreatedDate": "@items('For_each_2')?['CreatedDate']",
                      "Description": "@items('For_each_2')?['Description']",
                      "DeveloperName": "@{items('For_each_2')?['DeveloperName']}",
                      "Id": "@{items('For_each_2')?['Id']}",
                      "IsActive": "@{items('For_each_2')?['IsActive']}",
                      "LastModifiedById": "@items('For_each_2')?['LastModifiedById']",
                      "LastModifiedDate": "@items('For_each_2')?['LastModifiedDate']",
                      "Name": "@items('For_each_2')?['Name']",
                      "NamespacePrefix": "@items('For_each_2')?['NamespacePrefix']",
                      "SobjectType": "@items('For_each_2')?['SobjectType']",
                      "SystemModstamp": "@items('For_each_2')?['SystemModstamp']"
                    },
                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[RECORDTYPE_SALESFORCE]'))}/items"
                  },
                  "runAfter": {}
                },
                "Set_variable_2": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "LastModifiedDate",
                    "value": "@items('For_each_2')?['LastModifiedDate']"
                  },
                  "runAfter": {
                    "Insert_row_(V2)_2": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {
                "Get_records_types": [
                  "Succeeded"
                ]
              },
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 1
                }
              }
            },
            "For_each_3": {
              "type": "Foreach",
              "foreach": "@body('Get_IndustryC')?['value']",
              "actions": {
                "Insert_row_(V2)_3": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['sql_1']['connectionId']"
                      }
                    },
                    "method": "post",
                    "body": {
                      "Id": "@{items('For_each_3')?['Id']}",
                      "IsDeleted": "@{items('For_each_3')?['IsDeleted']}",
                      "Case_Industrial_Hierarchy__c": "@items('For_each_3')?['Case_Industrial_Hierarchy__c']",
                      "Industry__c": "@items('For_each_3')?['Industry__c']",
                      "Organization__c": "@items('For_each_3')?['Organization__c']",
                      "Sector__c": "@items('For_each_3')?['Sector__c']",
                      "Sub_Sector__c": "@items('For_each_3')?['Sub_Sector__c']",
                      "WIN_Industrial_Hierarchy__c": "@items('For_each_3')?['WIN_Industrial_Hierarchy__c']"
                    },
                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[INDUSTRY__C_SALESFORCE]'))}/items"
                  },
                  "runAfter": {}
                },
                "Set_variable_3": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "LastFetchModifiedDate",
                    "value": "@items('For_each_3')?['LastModifiedDate']"
                  },
                  "runAfter": {
                    "Insert_row_(V2)_3": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {
                "Get_IndustryC": [
                  "Succeeded"
                ]
              },
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 1
                }
              }
            },
            "Get_IndustryC": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['salesforce']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Industry__c'))}/items",
                "queries": {
                  "$filter": "LastModifiedDate gt @{variables('LastFetchModifiedDate')}",
                  "$orderby": "LastModifiedDate"
                }
              },
              "runAfter": {
                "Initialize_variable_4": [
                  "Succeeded"
                ]
              }
            },
            "Get_records": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['salesforce']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('WIN_Contributor__c'))}/items",
                "queries": {
                  "$filter": "LastModifiedDate gt @{variables('LastFetchDate')}",
                  "$orderby": "LastModifiedDate"
                }
              },
              "runAfter": {
                "Initialize_variable_2": [
                  "Succeeded"
                ]
              }
            },
            "Get_records_types": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['salesforce']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('RecordType'))}/items",
                "queries": {
                  "$filter": "LastModifiedDate gt @{variables('LastModifiedDate')}",
                  "$orderby": "LastModifiedDate"
                }
              },
              "runAfter": {
                "Initialize_variable_3": [
                  "Succeeded"
                ]
              }
            },
            "Get_row_(V2)": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sql_1']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[TRACKER]'))}/items/@{encodeURIComponent(encodeURIComponent(variables('TrackerId')))}"
              },
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              }
            },
            "Get_row_(V2)_2": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sql_1']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[TRACKER]'))}/items/@{encodeURIComponent(encodeURIComponent(variables('TrackerIdForRecordType')))}"
              },
              "runAfter": {
                "Initialize_TrackerId": [
                  "Succeeded"
                ]
              }
            },
            "Get_row_(V2)_3": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sql_1']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[TRACKER]'))}/items/@{encodeURIComponent(encodeURIComponent(variables('TrackerIdForIndustryC')))}"
              },
              "runAfter": {
                "Initialize_Tracker": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_Tracker": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "TrackerIdForIndustryC",
                    "type": "string",
                    "value": "Industry__c"
                  }
                ]
              },
              "runAfter": {
                "Execute_a_SQL_script": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_TrackerId": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "TrackerIdForRecordType",
                    "type": "string",
                    "value": "RecordType"
                  }
                ]
              },
              "runAfter": {
                "Execute_a_SQL_script": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "TrackerId",
                    "type": "string",
                    "value": "WIN_Contributor__c"
                  }
                ]
              },
              "runAfter": {
                "Execute_a_SQL_script": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable_2": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "LastFetchDate",
                    "type": "string",
                    "value": "@body('Get_row_(V2)')?['TrackerValue']"
                  }
                ]
              },
              "runAfter": {
                "Get_row_(V2)": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable_3": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "LastModifiedDate",
                    "type": "string",
                    "value": "@body('Get_row_(V2)_2')?['TrackerValue']"
                  }
                ]
              },
              "runAfter": {
                "Get_row_(V2)_2": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable_4": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "LastFetchModifiedDate",
                    "type": "string",
                    "value": "@body('Get_row_(V2)_3')?['TrackerValue']"
                  }
                ]
              },
              "runAfter": {
                "Get_row_(V2)_3": [
                  "Succeeded"
                ]
              }
            },
            "Update_row_(V2)": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sql_1']['connectionId']"
                  }
                },
                "method": "patch",
                "body": {
                  "TrackerValue": "@variables('LastFetchDate')"
                },
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[TRACKER]'))}/items/@{encodeURIComponent(encodeURIComponent(variables('TrackerId')))}"
              },
              "runAfter": {
                "For_each": [
                  "Succeeded"
                ]
              }
            },
            "Update_row_(V2)_2": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sql_1']['connectionId']"
                  }
                },
                "method": "patch",
                "body": {
                  "TrackerValue": "@variables('LastModifiedDate')"
                },
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[TRACKER]'))}/items/@{encodeURIComponent(encodeURIComponent(variables('TrackerIdForRecordType')))}"
              },
              "runAfter": {
                "For_each_2": [
                  "Succeeded"
                ]
              }
            },
            "Update_row_(V2)_3": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sql_1']['connectionId']"
                  }
                },
                "method": "patch",
                "body": {
                  "TrackerValue": "@variables('LastFetchModifiedDate')"
                },
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[TRACKER]'))}/items/@{encodeURIComponent(encodeURIComponent(variables('TrackerIdForIndustryC')))}"
              },
              "runAfter": {
                "For_each_3": [
                  "Succeeded"
                ]
              }
            },
            "Get_records_2": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['salesforce']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Case'))}/items"
              },
              "runAfter": {
                "Execute_a_SQL_script": [
                  "Succeeded"
                ]
              }
            },
            "Get_records_3": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['salesforce']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Task'))}/items"
              },
              "runAfter": {
                "Execute_a_SQL_script": [
                  "Succeeded"
                ]
              }
            },
            "Get_records_4": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['salesforce']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Case_Contributor__c'))}/items"
              },
              "runAfter": {
                "Execute_a_SQL_script": [
                  "Succeeded"
                ]
              }
            },
            "Get_records_5": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['salesforce']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('User'))}/items"
              },
              "runAfter": {
                "Execute_a_SQL_script": [
                  "Succeeded"
                ]
              }
            },
            "Execute_a_SQL_script": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sql_1']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "query": "IF OBJECT_ID(N'dbo.TRACKER', N'U') IS NULL\nBEGIN\n    CREATE TABLE TRACKER (\n\t\t[TrackerName] VARCHAR(255) PRIMARY KEY,\n\t\t[TrackerValue] VARCHAR(255)\n\t);\n\n\tINSERT INTO TRACKER(TrackerName,TrackerValue) VALUES ('WIN_Contributor__c','2000-01-01T00:00:00Z');\n\tINSERT INTO TRACKER(TrackerName,TrackerValue) VALUES ('RecordType','2000-01-01T00:00:00Z');\n\tINSERT INTO TRACKER(TrackerName,TrackerValue) VALUES ('Industry__c','2000-01-01T00:00:00Z');\n\tINSERT INTO TRACKER(TrackerName,TrackerValue) VALUES ('StandardLicense','0');\nEND\n\n\nIF OBJECT_ID(N'dbo.SIMA_STANDARD_STEEL_LICENSE', N'U') IS NULL\nBEGIN\n\tCREATE TABLE SIMA_STANDARD_STEEL_LICENSE (\n\t[Account_ID] INTEGER,\n\t[ExpirationDate] DATE,\n\t[LicenseNumber] VARCHAR(255),\n\t[ApplicationDate] DATE,\n\t[HTS Code] VARCHAR(255),\n\t[ValidFromDate] DATE,\n\t[Title] VARCHAR(255),\n\t[JsonData] VARCHAR(MAX),\n\t[LicenseStatus] VARCHAR(255)\n\t);\nEND\n\nIF OBJECT_ID(N'dbo.WIN_CONTRIBUTOR_SALESFORCE', N'U') IS NULL\nBEGIN\n\tCREATE TABLE WIN_CONTRIBUTOR_SALESFORCE (\n\t[CreatedById] VARCHAR(255),\n\t[CreatedDate] DATE,\n\t[Id] VARCHAR(255),\n\t[IsDeleted] VARCHAR(256),\n\t[LastModifiedById] VARCHAR(255),\n\t[LastModifiedDate] DATE,\n\t[LastReferencedDate] DATE,\n\t[LastViewedDate] DATE,\n\t[Name] VARCHAR(256),\n\t[OwnerId] VARCHAR(255),\n\t[SystemModstamp] VARCHAR(255),\n\t[Contributor_Name__c] VARCHAR(255),\n\t[Contributor__c] VARCHAR(256),\n\t[Inactive__c] VARCHAR(256),\n\t[Office__c] VARCHAR(256),\n\t[Organization__c] VARCHAR(255),\n\t[Original_Office__c] VARCHAR(256),\n\t[RH_Lev_1_GM_All__c] VARCHAR(256),\n\t[RH_Lev_2_DAS__c] VARCHAR(256),\n\t[RH_Lev_3_Region_2__c] VARCHAR(256),\n\t[RH_Lev_4_Region_1__c] VARCHAR(256),\n\t[RH_Lev_5_Country__c] VARCHAR(256),\n\t[RH_Lev_6_Office__c] VARCHAR(256),\n\t[RH_Lev_7_Individual__c] VARCHAR(256),\n\t[Run_As_User__c] VARCHAR(256),\n\t[WIN_Contributor_ID__c] VARCHAR(255),\n\t[WIN_Contributor_One__c]VARCHAR(255),\n\t[WIN__c] VARCHAR(255)\n\t);\nEND\n\nIF OBJECT_ID(N'dbo.RECORDTYPE_SALESFORCE', N'U') IS NULL\nBEGIN\n\tCREATE TABLE RECORDTYPE_SALESFORCE (\n\t[BusinessProcessId] VARCHAR(255),\n\t[CreatedById] VARCHAR(255),\n\t[CreatedDate] DATE,\n\t[Description] VARCHAR(256),\n\t[DeveloperName]VARCHAR(256),\n\t[Id] VARCHAR(255),\n\t[IsActive] VARCHAR(256),\n\t[LastModifiedById] VARCHAR(255),\n\t[LastModifiedDate] DATE,\n\t[Name] VARCHAR(256),\n\t[NamespacePrefix] VARCHAR(256),\n\t[SobjectType] VARCHAR(256),\n\t[SystemModstamp] DATE,\n\t);\nEND\n\nIF OBJECT_ID(N'dbo.INDUSTRY__C_SALESFORCE', N'U') IS NULL\nBEGIN\n\tCREATE TABLE INDUSTRY__C_SALESFORCE (\n\t[Id] VARCHAR(255),\n\t[IsDeleted] VARCHAR(256),\n\t[Case_Industrial_Hierarchy__c] VARCHAR(256),\n\t[Industry__c] VARCHAR(256),\n\t[Organization__c] VARCHAR(256),\n\t[Sector__c] VARCHAR(256),\n\t[Sub_Sector__c] VARCHAR(256),\n\t[WIN_Industrial_Hierarchy__c] VARCHAR(255) \n\t);\nEND\n"
                },
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('inta-sqla-01.database.windows.net'))},@{encodeURIComponent(encodeURIComponent('Inta-dataloader-01'))}/query/sql"
              },
              "runAfter": {}
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Recurrence": {
              "type": "Recurrence",
              "recurrence": {
                "frequency": "Minute",
                "interval": 3
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "sql_1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'sql')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('sql_1_Connection_Name'))]",
                "connectionName": "[parameters('sql_1_Connection_Name')]"
              },
              "salesforce": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'salesforce')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('salesforce_1_Connection_Name'))]",
                "connectionName": "[parameters('salesforce_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "name": "[parameters('LogicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('LogicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('sql_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('salesforce_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('sql_1_Connection_Name')]",
      "location": "eastus",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'eastus', '/managedApis/', 'sql')]"
        },
        "displayName": "[parameters('sql_1_Connection_DisplayName')]",
        "parameterValues": {
          "server": "[parameters('sql_1_server')]",
          "database": "[parameters('sql_1_database')]",
          "username": "[parameters('sql_1_username')]",
          "password": "[parameters('sql_1_password')]",
          "sqlConnectionString": "[parameters('sql_1_sqlConnectionString')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('salesforce_1_Connection_Name')]",
      "location": "eastus",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'eastus', '/managedApis/', 'salesforce')]"
        },
        "displayName": "[parameters('salesforce_1_Connection_DisplayName')]",
        "nonSecretParameterValues": {
          "token:LoginUri": "[parameters('salesforce_1_token:LoginUri')]",
          "salesforceApiVersion": "[parameters('salesforce_1_salesforceApiVersion')]"
        }
      }
    }
  ],
  "outputs": {}
}